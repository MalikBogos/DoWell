<!-- MainWindow.xaml -->
<Window x:Class="DoWell.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:DoWell.ViewModels"
        mc:Ignorable="d"
        Title="DoWell - Excel Clone" Height="750" Width="1300"
        WindowStartupLocation="CenterScreen">

    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <!-- Style for toolbar buttons -->
        <Style x:Key="ToolbarButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Background" Value="#2196F3"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1976D2"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#0D47A1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for DataGrid cells -->
        <Style x:Key="CellStyle" TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0.5"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="Padding" Value="2"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="#2196F3"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Command="{Binding SaveWorkbookCommand}" Gesture="Ctrl+S"/>
        <KeyBinding Command="{Binding OpenWorkbookCommand}" Gesture="Ctrl+O"/>
        <KeyBinding Command="{Binding NewWorkbookCommand}" Gesture="Ctrl+N"/>
    </Window.InputBindings>

    <DockPanel>
        <!-- Menu Bar -->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_New Workbook" Command="{Binding NewWorkbookCommand}" InputGestureText="Ctrl+N"/>
                <MenuItem Header="_Open..." Command="{Binding OpenWorkbookCommand}" InputGestureText="Ctrl+O"/>
                <MenuItem Header="_Save" Command="{Binding SaveWorkbookCommand}" InputGestureText="Ctrl+S"/>
                <MenuItem Header="Save _As..." Command="{Binding SaveAsCommand}" InputGestureText="Ctrl+Shift+S"/>
                <Separator/>
                <MenuItem Header="E_xit" Click="Exit_Click"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="Cu_t" Command="ApplicationCommands.Cut" InputGestureText="Ctrl+X"/>
                <MenuItem Header="_Copy" Command="ApplicationCommands.Copy" InputGestureText="Ctrl+C"/>
                <MenuItem Header="_Paste" Command="ApplicationCommands.Paste" InputGestureText="Ctrl+V"/>
                <Separator/>
                <MenuItem Header="_Find..." Command="{Binding FindCommand}" InputGestureText="Ctrl+F"/>
            </MenuItem>
            <MenuItem Header="_Format">
                <MenuItem Header="_Bold" x:Name="MenuBold" Click="BoldButton_Click" InputGestureText="Ctrl+B"/>
                <MenuItem Header="_Italic" x:Name="MenuItalic" Click="ItalicButton_Click" InputGestureText="Ctrl+I"/>
                <MenuItem Header="_Underline" x:Name="MenuUnderline" Click="UnderlineButton_Click" InputGestureText="Ctrl+U"/>
                <Separator/>
                <MenuItem Header="Create Format _Template..." Command="{Binding CreateFormatTemplateCommand}"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About DoWell..." Command="{Binding ShowAboutCommand}"/>
            </MenuItem>
        </Menu>

        <!-- Main Toolbar -->
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <Button Content="📁 Open" Command="{Binding OpenWorkbookCommand}" 
                        Style="{StaticResource ToolbarButtonStyle}"
                        ToolTip="Open a workbook (Ctrl+O)"/>
                <Button Content="💾 Save" Command="{Binding SaveWorkbookCommand}" 
                        Style="{StaticResource ToolbarButtonStyle}"
                        ToolTip="Save workbook (Ctrl+S)"/>
                <Separator/>
                <Button Content="➕ Row" Command="{Binding AddRowCommand}" 
                        Style="{StaticResource ToolbarButtonStyle}"
                        ToolTip="Add a new row to the worksheet"/>
                <Button Content="➖ Row" Command="{Binding RemoveRowCommand}" 
                        Style="{StaticResource ToolbarButtonStyle}"
                        ToolTip="Remove the last row from the worksheet"/>
                <Separator/>
                <Button Content="➕ Column" Command="{Binding AddColumnCommand}" 
                        Style="{StaticResource ToolbarButtonStyle}"
                        ToolTip="Add a new column to the worksheet"/>
                <Button Content="➖ Column" Command="{Binding RemoveColumnCommand}" 
                        Style="{StaticResource ToolbarButtonStyle}"
                        ToolTip="Remove the last column from the worksheet"/>
            </ToolBar>

            <!-- Formatting Toolbar -->
            <ToolBar>
                <ToggleButton x:Name="BoldButton" Content="B" FontWeight="Bold" 
                             Margin="2" Padding="8,5" Width="30"
                             ToolTip="Make text bold (Ctrl+B)"
                             Click="BoldButton_Click"/>
                <ToggleButton x:Name="ItalicButton" Content="I" FontStyle="Italic" 
                             Margin="2" Padding="8,5" Width="30"
                             ToolTip="Make text italic (Ctrl+I)"
                             Click="ItalicButton_Click"/>
                <ToggleButton x:Name="UnderlineButton" 
                             Margin="2" Padding="8,5" Width="30"
                             ToolTip="Underline text (Ctrl+U)"
                             Click="UnderlineButton_Click">
                    <TextBlock Text="U" TextDecorations="Underline"/>
                </ToggleButton>
                <Separator/>

                <!-- Background Color Picker -->
                <StackPanel Orientation="Horizontal">
                    <Label Content="BG:" VerticalAlignment="Center"/>
                    <ComboBox x:Name="BackgroundColorPicker" Width="100" 
                              SelectedValue="{Binding SelectedBackgroundColor}"
                              SelectionChanged="BackgroundColorPicker_SelectionChanged">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Rectangle Width="16" Height="16" Fill="{Binding Color}" Margin="0,0,5,0"/>
                                    <TextBlock Text="{Binding Name}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>

                <!-- Foreground Color Picker -->
                <StackPanel Orientation="Horizontal" Margin="5,0,0,0">
                    <Label Content="FG:" VerticalAlignment="Center"/>
                    <ComboBox x:Name="ForegroundColorPicker" Width="100"
                              SelectedValue="{Binding SelectedForegroundColor}"
                              SelectionChanged="ForegroundColorPicker_SelectionChanged">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Rectangle Width="16" Height="16" Fill="{Binding Color}" Margin="0,0,5,0"/>
                                    <TextBlock Text="{Binding Name}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>

                <Separator/>

                <!-- Format Templates -->
                <Label Content="Templates:" VerticalAlignment="Center"/>
                <ComboBox Width="120" ItemsSource="{Binding FormatTemplates}" 
                          DisplayMemberPath="Name"
                          x:Name="TemplateComboBox"
                          SelectionChanged="TemplateComboBox_SelectionChanged">
                    <ComboBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Apply Template" Click="ApplyTemplate_Click"/>
                            <MenuItem Header="Create New Template" Command="{Binding CreateFormatTemplateCommand}"/>
                        </ContextMenu>
                    </ComboBox.ContextMenu>
                </ComboBox>
                <Button Content="➕" Width="25" Command="{Binding CreateFormatTemplateCommand}"
                        ToolTip="Create new format template from selected cell"/>
            </ToolBar>
        </ToolBarTray>

        <!-- Formula Bar -->
        <Grid DockPanel.Dock="Top" Height="30" Background="#F5F5F5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Content="Cell Value:" VerticalAlignment="Center"/>
            <TextBox Grid.Column="1" x:Name="FormulaBar" Margin="5" 
                    Text="{Binding SelectedCell.Value, UpdateSourceTrigger=PropertyChanged}"
                    VerticalAlignment="Center">
                <TextBox.ToolTip>
                    <ToolTip>
                        <TextBlock>
                            Enter cell value here
                            <LineBreak/>
                            Press Enter to confirm
                        </TextBlock>
                    </ToolTip>
                </TextBox.ToolTip>
            </TextBox>
        </Grid>

        <!-- Status Bar -->
        <StatusBar DockPanel.Dock="Bottom" Height="25">
            <StatusBarItem>
                <TextBlock Text="{Binding CurrentWorkbook.Name, StringFormat='Workbook: {0}'}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding RowCount, StringFormat='Rows: {0}'}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding ColumnCount, StringFormat='Columns: {0}'}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem HorizontalAlignment="Stretch">
                <TextBlock Text="{Binding StatusMessage}" 
                          FontWeight="SemiBold">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsStatusSuccess}" Value="True">
                                    <Setter Property="Foreground" Value="Green"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsStatusSuccess}" Value="False">
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>

        <!-- Main Content Area - Direct DataGrid (geen tabs meer) -->
        <Border Margin="5" BorderBrush="#E0E0E0" BorderThickness="1">
            <ScrollViewer HorizontalScrollBarVisibility="Auto" 
                        VerticalScrollBarVisibility="Auto">
                <DataGrid x:Name="MainDataGrid"
                        AutoGenerateColumns="False"
                        CanUserAddRows="False"
                        CanUserDeleteRows="False"
                        GridLinesVisibility="All"
                        CellStyle="{StaticResource CellStyle}"
                        SelectionMode="Single"
                        SelectionUnit="Cell"
                        CellEditEnding="DataGrid_CellEditEnding"
                        SelectedCellsChanged="DataGrid_SelectedCellsChanged"
                        Loaded="DataGrid_Loaded">
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Cut" Command="ApplicationCommands.Cut" InputGestureText="Ctrl+X"/>
                            <MenuItem Header="Copy" Command="ApplicationCommands.Copy" InputGestureText="Ctrl+C"/>
                            <MenuItem Header="Paste" Command="ApplicationCommands.Paste" InputGestureText="Ctrl+V"/>
                            <Separator/>
                            <MenuItem Header="Format Cell..." Click="FormatCell_Click"/>
                            <MenuItem Header="Clear Contents" Click="ClearContents_Click"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </ScrollViewer>
        </Border>
    </DockPanel>
</Window>